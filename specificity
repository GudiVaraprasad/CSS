<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Inheritance in CSS</title>
<style>
header.navigation p {
  color: blue;
}
p.blurb {
  color: red;
}
p {
  color: green !important;
}
</style>
</head>
<body>
<header class="navigation">
  <p class="blurb">Now specificity also has a pretty simple rule, and that is most specific selector combination wins. While this is a pretty simple sounding rule, I would say that forgetting about the concept of specificity and how its simple method in CSS is what trips up developers most often. Let me show you a pretty straightforward technique that will let you figure out which selector combinations are most specific than others. You can think of specificity of your selectors as keeping a score. The selectors with the highest score win. In other words, the selectors with the higher score would be considered the most specific. It's easier to calculate the score if you arrange the types of things that affect the score from left to right, with the left being the highest value of specificity. Then simply take your CSS rule and fill in the number of times you see a particular type of selector being used in it's proper location. The number that's created is your final score.</p>
</header>
</body>
</html>
